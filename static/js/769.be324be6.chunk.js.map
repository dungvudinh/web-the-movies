{"version":3,"file":"static/js/769.be324be6.chunk.js","mappings":"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","sources":["components/pageHeader/pageHeader.js","components/input/input.js","components/movieGrid/movieGrid.js","pages/Catalog.js"],"sourcesContent":["import \"./pageHeader.scss\";\r\nimport bg from \"../../assets/footer-bg.jpg\";\r\nfunction PageHeader(props)\r\n{\r\n    return (\r\n        <div className=\"page-header\" style={{backgroundImage:`url(${bg})`}}>\r\n            <h2>{props.children}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageHeader;","import \"./input.scss\";\r\nimport * as React from \"react\"\r\n\r\nfunction Input(props)\r\n{\r\n    return (\r\n       <input type={props.type} value={props.value} placeholder={props.placeholder} \r\n       onChange={props.onChange ? props.onChange :null} onKeyUp={props.onKeyUp}/>\r\n    )\r\n}\r\nexport default Input;","import \"./movieGrid.scss\";\r\nimport MovieCard from \"../movie-card/movieCard\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport tmpApi, { category, movieType,tvType } from \"../../API/tmdbApi\";\r\nimport {OutlineButton} from \"../button/button\";\r\nimport Input from \"../input/input\";\r\nimport Button from \"../button/button\";\r\nfunction MovieGrid(props)\r\n{\r\n    const [items, setItems]= useState([]);\r\n    const [page, setPage]= useState(1);\r\n    const [totalPage, setTotalPage]= useState(0);\r\n    const {keyword}= useParams();\r\n    useEffect(() => {\r\n      const getList =async ()=>\r\n      {\r\n          let res= null;\r\n          if(keyword=== undefined)\r\n          {\r\n              const params= {};\r\n              switch(props.category)\r\n              {\r\n                  case category.movie:\r\n                      res= await tmpApi.getMoviesList(movieType.upcoming, {params});\r\n                      break;\r\n                  default:\r\n                      res= await tmpApi.getTvList(tvType.popular, {params});\r\n              }\r\n          }\r\n          else \r\n          {\r\n              const params= {\r\n                  query:keyword\r\n              }\r\n              res= await tmpApi.search(props.category, {params})\r\n          }\r\n          setItems(res.results);\r\n          setTotalPage(res.total_pages);\r\n      }\r\n    getList();\r\n    }, [props.category, keyword])\r\n    const handleLoadMore= async ()=>\r\n    {\r\n        let res= null;\r\n        if(keyword=== undefined)\r\n        {\r\n            const params= {\r\n                page:page+1\r\n            };\r\n            switch(props.category)\r\n            {\r\n                case category.movie:\r\n                    res= await tmpApi.getMoviesList(movieType.upcoming, {params});\r\n                    break;\r\n                default:\r\n                    res= await tmpApi.getTvList(tvType.popular, {params});\r\n            }\r\n        }\r\n        else \r\n        {\r\n            const params= {\r\n                query:keyword,\r\n                page:page+1\r\n            }\r\n            res= await tmpApi.search(props.category, {params})\r\n        }\r\n      setItems([...items, ...res.results]);\r\n      setPage(prevPage=>prevPage+1);\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"section mb-3\">\r\n            <MovieSearch keyword={keyword} category={props.category}/>\r\n        </div>\r\n        <div className=\"movie-grid\">\r\n            {items && items.map(item=>(\r\n                    <MovieCard category={props.category}  item={item} key= {item.id}/>\r\n            ))}\r\n        </div>\r\n        {page < totalPage ? (\r\n            <div className=\"movie-grid__loadmore\">\r\n                <OutlineButton className=\"small\" onClick={()=>handleLoadMore}>Load more</OutlineButton>\r\n            </div>\r\n        ) : undefined}\r\n        </>\r\n    )\r\n}\r\nexport const MovieSearch =props=>\r\n{\r\n    const [keyword, setKeyword]= useState(props.keyword ? props.keyword : '');\r\n    const navigate= useNavigate();\r\n    const goToSearch= useCallback(()=>{\r\n        if(keyword.trim().length>0) navigate(`/${category[props.category]}/search/${keyword}`);\r\n    },[keyword, props.category, navigate]);\r\n     useEffect(()=>\r\n     {\r\n         const enterEvent =e=>\r\n         {\r\n             e.preventDefault();\r\n             if(e.keyCode===13) goToSearch();\r\n         }\r\n        document.addEventListener('keyup', enterEvent);\r\n         return ()=> document.removeEventListener('keyup', enterEvent); \r\n     }, [keyword, goToSearch])\r\n    return (\r\n        <div className=\"movie-search\">\r\n                 <Input type=\"text\" placeholder=\"Enter keyword\" value={keyword} onChange={e=>setKeyword(e.target.value)}/>\r\n                <Button className=\"button\" type=\"submit\" onClick={()=>goToSearch()}>Search</Button>\r\n        </div>\r\n    )\r\n}\r\nexport default MovieGrid;","import { useParams } from \"react-router-dom\";\r\nimport PageHeader from \"../components/pageHeader/pageHeader\";\r\nimport { category  as cate} from \"../API/tmdbApi\";\r\nimport MovieGrid from \"../components/movieGrid/movieGrid\";\r\nfunction Catalog()\r\n{\r\n    const {category}= useParams();\r\n    return (\r\n        <>\r\n       <PageHeader>\r\n           {category ===cate.movie ? 'Movies ' : 'TV Series'}\r\n       </PageHeader>\r\n       <div className=\"container\">\r\n           <div className=\"section mb-3\">\r\n               <MovieGrid category= {category}/>\r\n           </div>\r\n       </div>\r\n        </>\r\n    )\r\n}\r\nexport default Catalog;"],"names":["props","className","style","backgroundImage","bg","children","type","value","placeholder","onChange","onKeyUp","MovieSearch","useState","keyword","setKeyword","navigate","useNavigate","goToSearch","useCallback","trim","length","category","useEffect","enterEvent","e","preventDefault","keyCode","document","addEventListener","removeEventListener","target","onClick","items","setItems","page","setPage","totalPage","setTotalPage","useParams","getList","res","undefined","params","tmpApi","movieType","tvType","query","results","total_pages","handleLoadMore","prevPage","map","item","id","cate"],"sourceRoot":""}