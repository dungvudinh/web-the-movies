{"version":3,"file":"static/js/778.7b9e78ce.chunk.js","mappings":"2QAgCA,MAxBA,SAAkBA,GAEd,IAAOC,GAAWC,EAAAA,EAAAA,MAAXD,SACP,GAAyBE,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAcC,EAAd,KAUA,OATAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAU,mCAAE,oGAEGC,EAAAA,GAAAA,OAAcP,EAASD,EAAMS,IAFhC,OAERC,EAFQ,OAGdL,EAASK,EAAIC,MAHC,2CAAF,qDAKhBJ,MACF,CAACP,EAAMS,GAAGR,KAER,SAAC,KAAD,CAAQW,cAAc,OAAOC,YAAY,EAAOC,aAAc,GAAKC,UAAU,QAAQC,SAAU,CAACC,MAAM,KAAtG,SACKb,GAASA,EAAMc,KAAI,SAAAP,GAAI,OACpB,UAAC,KAAD,CAA2BI,UAAU,cAArC,WACA,gBAAKA,UAAU,mBAAmBI,MAAO,CAACC,gBAAgB,OAAD,OAAQT,EAAKU,aAAeC,EAAAA,EAAAA,OAAiBX,EAAKU,cAAgBE,EAAlE,SACzD,gBAAKR,UAAU,mBAAf,SAAmCJ,EAAKa,SAFtBb,EAAKF,UCCvC,IAAMgB,EAAO,SAAAzB,GAET,IAAM0B,EAAM1B,EAAM0B,KACZC,GAAWC,EAAAA,EAAAA,QAAO,MAOxB,OANAtB,EAAAA,EAAAA,YAAU,WAEN,IAAMuB,EAAuC,EAA/BF,EAAUG,QAAQC,aAAe,GAAK,KACpDJ,EAAUG,QAAQE,aAAa,SAAUH,KAE3C,KAEE,iBAAKd,UAAU,QAAf,WACI,gBAAKA,UAAU,eAAf,UACI,wBAAKW,EAAKF,UAEd,mBAAQS,IAAG,uCAAkCP,EAAKQ,KAAOC,YAAY,IAAIC,IAAKT,EAAWU,MAAM,OAC/FC,MAAM,QAAQC,iBAAiB,QAI3C,EAzCA,SAAmBvC,GAEf,IAAOC,GAAWC,EAAAA,EAAAA,MAAXD,SACP,GAA2BE,EAAAA,EAAAA,UAAS,IAApC,eAAOqC,EAAP,KAAeC,EAAf,KAUA,OATAnC,EAAAA,EAAAA,YAAU,WAEN,IAAMoC,EAAS,mCAAE,oGAEIlC,EAAAA,GAAAA,SAAgBP,EAASD,EAAMS,IAFnC,OAEPC,EAFO,OAGb+B,EAAU/B,EAAIiC,QAAQC,MAAM,EAAE,IAHjB,2CAAF,qDAKfF,MACF,CAAC1C,EAAMS,GAAGR,KAER,8BACCuC,GAAUA,EAAOtB,KAAI,SAAA2B,GAAK,OACvB,SAACpB,EAAD,CAAsBC,KAAMmB,GAAhBA,EAAMpC,U,UCqD9B,MAjEA,WAEI,OAAqBP,EAAAA,EAAAA,MAAdD,EAAP,EAAOA,SAASQ,EAAhB,EAAgBA,GAChB,GAAuBN,EAAAA,EAAAA,UAAS,MAAhC,eAAOuB,EAAP,KAAaoB,EAAb,KAaA,OAXAxC,EAAAA,EAAAA,YAAU,WAEN,IAAMyC,EAAS,mCAAG,oGAEGC,EAAAA,GAAAA,OAAc/C,EAAUQ,EAAI,CAACwC,OAAO,KAFvC,OAERvC,EAFQ,OAIdoC,EAAQpC,GACRwC,OAAOC,SAAS,EAAE,GALJ,2CAAH,qDAOfJ,MACF,CAAC9C,EAAUQ,KAET,8BACEiB,IACE,iCACA,gBAAKX,UAAU,SAASI,MAAO,CAACC,gBAAgB,OAAD,OAAQE,EAAAA,EAAAA,cAAwBI,EAAK0B,eAAiB1B,EAAK2B,aAA3D,SAC/C,iBAAKtC,UAAU,+BAAf,WAEI,gBAAKA,UAAU,wBAAf,UACI,gBAAKA,UAAU,6BAA6BI,MAAO,CAACC,gBAAgB,OAAD,OAAQE,EAAAA,EAAAA,cAAwBI,EAAK0B,eAAiB1B,EAAK2B,aAA3D,WAGvE,iBAAKtC,UAAU,sBAAf,WAEI,gBAAKA,UAAU,QAAf,SACKW,EAAKY,OAASZ,EAAKF,QAGxB,gBAAKT,UAAU,SAAf,SACKW,EAAK4B,QAAU5B,EAAK4B,OAAOpC,KAAI,SAAAqC,GAAK,OACjC,iBAAsBxC,UAAU,eAAhC,SAAgDwC,EAAM/B,MAA1C+B,EAAM9C,UAG1B,cAAGM,UAAU,WAAb,SAAyBW,EAAK8B,YAE9B,iBAAKzC,UAAU,OAAf,WACI,gBAAKA,UAAU,kBAAf,UACI,qCAEJ,SAAC,EAAD,CAAUN,GAAKiB,EAAKjB,eAKhC,iBAAKM,UAAU,YAAf,WACI,gBAAKA,UAAU,eAAf,UACI,SAAC,EAAD,CAAYN,GAAIiB,EAAKjB,QAEzB,iBAAKM,UAAU,eAAf,WACI,gBAAKA,UAAU,uBAAf,UACI,uCAEJ,SAAC,IAAD,CAAQd,SAAWA,EAAUwD,KAAK,UAAUhD,GAAKiB,EAAKjB,kB","sources":["pages/detail/castList.js","pages/detail/videoList.js","pages/detail/Detail.js"],"sourcesContent":["import {useState,useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport tmpApi from \"../../API/tmdbApi\";\r\nimport apiConfig from \"../../API/apiConfig\";\r\nimport {Swiper, SwiperSlide} from \"swiper/react\";\r\nimport \"./detail.scss\";\r\nimport noImage from \"../../assets/noImage.jpg\"\r\n\r\nfunction CastList(props)\r\n{\r\n    const {category}= useParams();\r\n    const [casts, setCasts]= useState([]);\r\n    useEffect(()=>\r\n    {\r\n        const getCredits= async ()=>\r\n        {\r\n            const res= await tmpApi.credit(category,props.id);\r\n            setCasts(res.cast);\r\n        }\r\n        getCredits();\r\n    },[props.id,category])\r\n    return (\r\n        <Swiper slidesPerView='auto' grabCursor={true}  spaceBetween={10}  className=\"casts\" autoplay={{delay:1000}}>\r\n            {casts && casts.map(cast=>(\r\n                <SwiperSlide key={cast.id} className=\"casts__item\">\r\n                <div className=\"casts__item__img\" style={{backgroundImage:`url(${cast.profile_path ? apiConfig.img500(cast.profile_path) : noImage})`}}></div>\r\n                <div className=\"casts__item_name\">{cast.name}</div>\r\n                </SwiperSlide>\r\n            ))}\r\n        </Swiper>\r\n    )\r\n}\r\nexport default CastList;","import { ListItem } from \"@material-ui/core\";\r\nimport {useState, useEffect, useRef} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport tmpApi from \"../../API/tmdbApi\";\r\nfunction VideoList(props)\r\n{\r\n    const {category}= useParams();\r\n    const [videos, setVideos]= useState([]);\r\n    useEffect(()=>\r\n    {\r\n        const getVideos= async ()=>\r\n        {\r\n            const res= await tmpApi.getVideo(category,props.id);\r\n            setVideos(res.results.slice(0,3));\r\n        }\r\n        getVideos();\r\n    },[props.id,category])\r\n    return (\r\n        <>\r\n        {videos && videos.map(video=>(\r\n            <Video key={video.id} item={video}/>\r\n        ))}\r\n        </>\r\n    )\r\n}\r\nconst Video =props=>\r\n{\r\n    const item= props.item;\r\n    const iframeRef= useRef(null);\r\n    useEffect(()=>\r\n    {\r\n        const height= iframeRef.current.offsetHeight*9/16 + \"px\";\r\n        iframeRef.current.setAttribute('height', height);\r\n\r\n    },[])\r\n    return (\r\n        <div className=\"video\">\r\n            <div className=\"video__title\">\r\n                <h2>{item.name}</h2>\r\n            </div>\r\n            <iframe src={`http://www.youtube.com/embed/${item.key}`} frameBorder=\"0\" ref={iframeRef} width=\"100%\"\r\n            title=\"video\" allowFullScreen={true}></iframe>\r\n        </div>\r\n    )\r\n}\r\nexport default VideoList;","import {useState, useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport tmpAPi from \"../../API/tmdbApi\";\r\nimport apiConfig from \"../../API/apiConfig\";\r\nimport \"./detail.scss\";\r\nimport CastList from \"./castList\";\r\nimport VideoList from \"./videoList\";\r\nimport Movies from \"../../components/movies/movies\"\r\nfunction Detail()\r\n{\r\n    const {category,id}= useParams();\r\n    const [item, setItem]= useState(null);\r\n\r\n    useEffect(()=>\r\n    {\r\n        const getDetail = async ()=>\r\n        {\r\n            const res= await tmpAPi.detail(category, id, {params:{}});\r\n          \r\n            setItem(res);\r\n            window.scrollTo(0,0);\r\n        }\r\n        getDetail();\r\n    },[category, id]);\r\n    return (\r\n        <>\r\n        { item && (\r\n            <>\r\n            <div className=\"banner\" style={{backgroundImage:`url(${apiConfig.originalImage(item.backdrop_path || item.poster_path)})`}}></div>\r\n            <div className=\"mb-3 movie-content container\">\r\n\r\n                <div className=\"movie-content__poster\">\r\n                    <div className=\"movie-content__poster__img\" style={{backgroundImage:`url(${apiConfig.originalImage(item.backdrop_path || item.poster_path)})`}}></div>\r\n                </div>\r\n\r\n                <div className=\"movie-content__info\">\r\n\r\n                    <div className=\"title\">\r\n                        {item.title || item.name}\r\n                    </div>\r\n\r\n                    <div className=\"genres\">\r\n                        {item.genres && item.genres.map(genre=>(\r\n                            <span key ={genre.id} className=\"genres__item\">{genre.name}</span>\r\n                        ))}\r\n                    </div>\r\n                    <p className=\"overview\">{item.overview}</p>\r\n\r\n                    <div className=\"cast\">\r\n                        <div className=\"section__header\">\r\n                            <h2>Casts</h2>\r\n                        </div>\r\n                        <CastList id ={item.id}/>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"section mb-3\">\r\n                    <VideoList  id={item.id}/>\r\n                </div>\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h1>Similar</h1>\r\n                    </div>\r\n                    <Movies category ={category} type=\"similar\" id ={item.id}/>\r\n                </div>\r\n            </div>\r\n            </>\r\n        )}\r\n        </>\r\n    )\r\n}\r\nexport default Detail;\r\n"],"names":["props","category","useParams","useState","casts","setCasts","useEffect","getCredits","tmpApi","id","res","cast","slidesPerView","grabCursor","spaceBetween","className","autoplay","delay","map","style","backgroundImage","profile_path","apiConfig","noImage","name","Video","item","iframeRef","useRef","height","current","offsetHeight","setAttribute","src","key","frameBorder","ref","width","title","allowFullScreen","videos","setVideos","getVideos","results","slice","video","setItem","getDetail","tmpAPi","params","window","scrollTo","backdrop_path","poster_path","genres","genre","overview","type"],"sourceRoot":""}